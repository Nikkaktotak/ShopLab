# Generated by Django 3.1.6 on 2022-05-16 21:25

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('is_verified', models.BooleanField(default=False)),
                ('reset_password_token', models.CharField(default='', max_length=39)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_for_link', models.CharField(max_length=100, unique=True)),
                ('photo', models.ImageField(blank=True, upload_to='photos_for_brand/%Y/%m/%d/')),
                ('about', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_for_link', models.CharField(max_length=100)),
                ('about', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Characteristic',
                'verbose_name_plural': 'Characteristics',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('address', models.CharField(max_length=100)),
                ('fk_buyers_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('hex', models.CharField(max_length=7)),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=256)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('main_photo', models.ImageField(blank=True, upload_to='main_photos_for_goods/%Y/%m/%d/')),
                ('in_stock', models.BooleanField(default=True)),
                ('is_enable', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateTimeField(auto_now=True)),
                ('fk_brand_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.brand', verbose_name='Brand')),
                ('fk_category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='Category')),
                ('fk_color_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.color', verbose_name='Color')),
            ],
            options={
                'verbose_name': 'Goods',
                'verbose_name_plural': 'Goods',
                'ordering': ['add_date'],
            },
        ),
        migrations.CreateModel(
            name='PhotoForSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.ImageField(upload_to='photos_for_slider/%Y/%m/%d/')),
            ],
            options={
                'verbose_name': 'Photo for slider',
                'verbose_name_plural': 'Photos for slider',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_for_link', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypesOfDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypesOfPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SizesGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods')),
                ('fk_size_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.size')),
            ],
            options={
                'verbose_name': 'Goods size',
                'verbose_name_plural': 'Goods sizes',
            },
        ),
        migrations.AddField(
            model_name='size',
            name='fk_goods_id',
            field=models.ManyToManyField(through='shop.SizesGoods', to='shop.Goods'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(max_length=256)),
                ('review_text', models.TextField()),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateTimeField(auto_now=True)),
                ('fk_buyer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('fk_goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fk_check_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.check')),
                ('fk_goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoForReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.ImageField(upload_to='photos_for_review/%Y/%m/%d/')),
                ('fk_goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.review')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PhotoForGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.ImageField(upload_to='photos_for_goods/%Y/%m/%d/')),
                ('fk_goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods')),
            ],
            options={
                'verbose_name': 'PHOTO FOR GOODS',
                'verbose_name_plural': 'PHOTOS FOR GOODS',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='check',
            name='fk_types_of_delivery_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.typesofdelivery'),
        ),
        migrations.AddField(
            model_name='check',
            name='fk_types_of_payment_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.typesofpayment'),
        ),
        migrations.AddField(
            model_name='check',
            name='goods',
            field=models.ManyToManyField(through='shop.Purchase', to='shop.Goods'),
        ),
        migrations.CreateModel(
            name='CharacteristicsGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('fk_characteristic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.characteristic')),
                ('fk_goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods')),
            ],
            options={
                'verbose_name': 'GOODS Characteristic',
                'verbose_name_plural': 'GOODS Characteristics',
                'unique_together': {('fk_characteristic_id', 'fk_goods_id')},
            },
        ),
        migrations.AddField(
            model_name='characteristic',
            name='fk_goods_id',
            field=models.ManyToManyField(through='shop.CharacteristicsGoods', to='shop.Goods'),
        ),
        migrations.AddField(
            model_name='category',
            name='fk_section_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.section', verbose_name='Section'),
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('fk_buyer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('fk_goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods')),
                ('fk_size_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.size')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='goods_for_basket',
            field=models.ManyToManyField(related_name='goods_for_basket', through='shop.Basket', to='shop.Goods'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='goods_for_review',
            field=models.ManyToManyField(related_name='goods_for_review', through='shop.Review', to='shop.Goods'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('name', 'name_for_link', 'fk_section_id')},
        ),
    ]
